//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Klient.CarsServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Car", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class Car : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HpField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandField, value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public double Hp {
            get {
                return this.HpField;
            }
            set {
                if ((this.HpField.Equals(value) != true)) {
                    this.HpField = value;
                    this.RaisePropertyChanged("Hp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CarsServiceReference.IRestService")]
    public interface IRestService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/getAllXml", ReplyAction="http://tempuri.org/IRestService/getAllXmlResponse")]
        Klient.CarsServiceReference.Car[] getAllXml();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/getAllXml", ReplyAction="http://tempuri.org/IRestService/getAllXmlResponse")]
        System.Threading.Tasks.Task<Klient.CarsServiceReference.Car[]> getAllXmlAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/getByIdXml", ReplyAction="http://tempuri.org/IRestService/getByIdXmlResponse")]
        Klient.CarsServiceReference.Car getByIdXml(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/getByIdXml", ReplyAction="http://tempuri.org/IRestService/getByIdXmlResponse")]
        System.Threading.Tasks.Task<Klient.CarsServiceReference.Car> getByIdXmlAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/addXml", ReplyAction="http://tempuri.org/IRestService/addXmlResponse")]
        string addXml(Klient.CarsServiceReference.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/addXml", ReplyAction="http://tempuri.org/IRestService/addXmlResponse")]
        System.Threading.Tasks.Task<string> addXmlAsync(Klient.CarsServiceReference.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/deleteXml", ReplyAction="http://tempuri.org/IRestService/deleteXmlResponse")]
        Klient.CarsServiceReference.Car deleteXml(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/deleteXml", ReplyAction="http://tempuri.org/IRestService/deleteXmlResponse")]
        System.Threading.Tasks.Task<Klient.CarsServiceReference.Car> deleteXmlAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/getAllJson", ReplyAction="http://tempuri.org/IRestService/getAllJsonResponse")]
        Klient.CarsServiceReference.Car[] getAllJson();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/getAllJson", ReplyAction="http://tempuri.org/IRestService/getAllJsonResponse")]
        System.Threading.Tasks.Task<Klient.CarsServiceReference.Car[]> getAllJsonAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/getByIdJson", ReplyAction="http://tempuri.org/IRestService/getByIdJsonResponse")]
        Klient.CarsServiceReference.Car getByIdJson(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/getByIdJson", ReplyAction="http://tempuri.org/IRestService/getByIdJsonResponse")]
        System.Threading.Tasks.Task<Klient.CarsServiceReference.Car> getByIdJsonAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/addJson", ReplyAction="http://tempuri.org/IRestService/addJsonResponse")]
        string addJson(Klient.CarsServiceReference.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/addJson", ReplyAction="http://tempuri.org/IRestService/addJsonResponse")]
        System.Threading.Tasks.Task<string> addJsonAsync(Klient.CarsServiceReference.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/deleteJson", ReplyAction="http://tempuri.org/IRestService/deleteJsonResponse")]
        Klient.CarsServiceReference.Car deleteJson(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/deleteJson", ReplyAction="http://tempuri.org/IRestService/deleteJsonResponse")]
        System.Threading.Tasks.Task<Klient.CarsServiceReference.Car> deleteJsonAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRestServiceChannel : Klient.CarsServiceReference.IRestService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RestServiceClient : System.ServiceModel.ClientBase<Klient.CarsServiceReference.IRestService>, Klient.CarsServiceReference.IRestService {
        
        public RestServiceClient() {
        }
        
        public RestServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RestServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RestServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RestServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Klient.CarsServiceReference.Car[] getAllXml() {
            return base.Channel.getAllXml();
        }
        
        public System.Threading.Tasks.Task<Klient.CarsServiceReference.Car[]> getAllXmlAsync() {
            return base.Channel.getAllXmlAsync();
        }
        
        public Klient.CarsServiceReference.Car getByIdXml(string id) {
            return base.Channel.getByIdXml(id);
        }
        
        public System.Threading.Tasks.Task<Klient.CarsServiceReference.Car> getByIdXmlAsync(string id) {
            return base.Channel.getByIdXmlAsync(id);
        }
        
        public string addXml(Klient.CarsServiceReference.Car car) {
            return base.Channel.addXml(car);
        }
        
        public System.Threading.Tasks.Task<string> addXmlAsync(Klient.CarsServiceReference.Car car) {
            return base.Channel.addXmlAsync(car);
        }
        
        public Klient.CarsServiceReference.Car deleteXml(string id) {
            return base.Channel.deleteXml(id);
        }
        
        public System.Threading.Tasks.Task<Klient.CarsServiceReference.Car> deleteXmlAsync(string id) {
            return base.Channel.deleteXmlAsync(id);
        }
        
        public Klient.CarsServiceReference.Car[] getAllJson() {
            return base.Channel.getAllJson();
        }
        
        public System.Threading.Tasks.Task<Klient.CarsServiceReference.Car[]> getAllJsonAsync() {
            return base.Channel.getAllJsonAsync();
        }
        
        public Klient.CarsServiceReference.Car getByIdJson(string id) {
            return base.Channel.getByIdJson(id);
        }
        
        public System.Threading.Tasks.Task<Klient.CarsServiceReference.Car> getByIdJsonAsync(string id) {
            return base.Channel.getByIdJsonAsync(id);
        }
        
        public string addJson(Klient.CarsServiceReference.Car car) {
            return base.Channel.addJson(car);
        }
        
        public System.Threading.Tasks.Task<string> addJsonAsync(Klient.CarsServiceReference.Car car) {
            return base.Channel.addJsonAsync(car);
        }
        
        public Klient.CarsServiceReference.Car deleteJson(string id) {
            return base.Channel.deleteJson(id);
        }
        
        public System.Threading.Tasks.Task<Klient.CarsServiceReference.Car> deleteJsonAsync(string id) {
            return base.Channel.deleteJsonAsync(id);
        }
    }
}
